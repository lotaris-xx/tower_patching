---
- hosts: all
  gather_facts: no
  become: false
  module_defaults:
    uri:
      user: "{{ tower_user }}"
      password: "{{ tower_passwd }}"
      force_basic_auth: true
      body_format: json
      status_code:
        - 200
        - 201
  vars_files:
    - vars.yml
  serial:
    - 1
  tasks:
    # For nodes in tower group:
    #   Pull node out of Load Balancer so no new requests come into API or UI

    - name: Disable node {{ inventory_hostname }}
      uri:
        url: "{{ tower_instance_id_url }}"
        method: PATCH
        body:
          enabled: false
      delegate_to: localhost
      connection: local

    - name: Wait until jobs are done
      uri:
        url: "{{ tower_instance_id_url }}"
        method: GET
      register: tower_instance_jobs
      delegate_to: localhost
      connection: local
      until: tower_instance_jobs.json.jobs_running |int == 0
      retries: 10
      delay: 30

    - name: Shut down tower on node
      command: /usr/bin/ansible-tower-service stop
      become: true

    - name: Patch node
      yum:
        name: "*"
        state: latest
      become: true

    - name: Reboot {{ inventory_hostname }}
      reboot:
        post_reboot_delay: 30
      become: true

    - name: Enable requests for {{ inventory_hostname }}
      uri:
        url: "{{ tower_instance_id_url }}"
        method: PATCH
        body:
          enabled: true
      delegate_to: localhost
      connection: local

    # For nodes in tower group:
    #   Re-enable node in laod balancer
